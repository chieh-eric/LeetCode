from collections import defaultdict
class Solution(object):
    def minMalwareSpread(self, graph, initial):
        """
        :type graph: List[List[int]]
        :type initial: List[int]
        :rtype: int
        """
        # 0 -> 1, 1->2
        n = len(graph)
        initial.sort()
        result = -1
        min_infect = float('inf')

        def bfs(remove):
            visited = [False]*n
            for node in initial:
                if node == remove:
                    continue
                if visited[node]:
                    continue
                queue = deque()
                queue.append(node)
                
                while queue:
                    cur = queue.popleft()
                    if visited[cur]:
                        continue
                    visited[cur] = True
                    for i in range(n):
                        if graph[cur][i] == 1 and not visited[i] and i != remove:
                            queue.append(i)
            return sum(visited)
        
        for node in initial:
            infected = bfs(node)
            if infected < min_infect:
                min_infect = infected
                result = node
        return result
            
                        